:HIDDEN:
#+CATEGORY: guix
#+PROPERTY: header-args :results silent
:END:
#+TITLE: Guix Configuration

Declaring packages to install on user profile

* Emacs
#+BEGIN_SRC scheme :tangle ./emacs.scm
(use-modules (gnu packages)
             (guix profiles)
             (ice-9 match)
             (ice-9 pretty-print)
             (guix git-download)
             (gnu packages emacs-xyz))

;;; HELPER PROCEDURES
;;; =================

(define (profile-manifest->package-names)
  "Return a list with the names of the packages installed in the user
   profile (see %user-profile-directory in the (guix profiles) module)."
  (map manifest-entry-name
       (manifest-entries (profile-manifest %user-profile-directory))))

;;; MANIFEST
;;; ========

(packages->manifest (map specification->package emacs-packages))

;;; PACKAGES
;;; ========

(define emacs-packages
  (append (profile-manifest->package-names)
          (list "emacs"
                "emacs-guix"
                "emacs-exwm"
                "emacs-xelb"
                "emacs-exwm-edit"
                "emacs-hydra"
                "emacs-transient"
                "emacs-howm"
                "emacs-emms"
                "emacs-circe"
                "emacs-pdf-tools"
                "emacs-elfeed"
                "emacs-elfeed-org"
                "emacs-dumb-jump"
                "emacs-json-mode"
                "emacs-web-beautify"
                "emacs-web-mode"
                "emacs-async"
                "emacs-dash"
                "emacs-f"
                "emacs-s"
                "emacs-ht"
                "emacs-a"
                "emacs-request"
                "emacs-exec-path-from-shell"
                "emacs-desktop-environment"
                "emacs-all-the-icons"
                "emacs-which-key"
                "emacs-discover-my-major"
                "emacs-helpful"
                "emacs-better-defaults"
                "emacs-visual-fill-column"
                "emacs-ace-window"
                "emacs-transpose-frame"
                "emacs-dired-hacks"
                "emacs-dired-rsync"
                "emacs-avy"
                "emacs-goto-chg"
                "emacs-expand-region"
                "emacs-smartparens"
                "emacs-edit-indirect"
                "emacs-flycheck"
                "emacs-wgrep"
                "emacs-anzu"
                "emacs-counsel-projectile"
                "emacs-ivy"
                "emacs-ivy-rich"
                "emacs-smex"
                "emacs-company"
                "emacs-company-quickhelp"
                "emacs-prescient"
                "emacs-crux"
                "emacs-keyfreq"
                "emacs-elmacro"
                "emacs-projectile"
                "emacs-ibuffer-projectile"
                "emacs-magit"
                "emacs-git-timemachine"
                "emacs-gitpatch"
                "emacs-org"
                "emacs-org-contrib"
                "emacs-org-pomodoro"
                "emacs-markdown-mode"
                "emacs-nov-el"
                "emacs-scratch-el"
                "emacs-yasnippet"
                "emacs-yasnippet-snippets"
                "emacs-auto-yasnippet"
                "emacs-htmlize"
                )))
#+END_SRC
* Packages to build from source
#+BEGIN_SRC text
emacs-swiper
emacs-org-cliplink
emacs-org-download
emacs-org-journal
emacs-toc-org
emacs-ox-gfm
emacs-browse-kill-ring
emacs-persistent-scratch
emacs-unkillable-scratch
emacs-buffer-move
emacs-windmove
emacs-boon
emacs-objed
emacs-hyperbole
emacs-torus
 #+END_SRC
